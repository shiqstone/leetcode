package main

import "testing"

func Test_isValidSudoku(t *testing.T) {
	type args struct {
		board [][]string
	}
	tests := []struct {
		name string
		args args
		want bool
	}{
		{
			name: "test1",
			args: args{
				board: [][]string{
					[]string{"5", "3", ".", ".", "7", ".", ".", ".", "."},
					[]string{"6", ".", ".", "1", "9", "5", ".", ".", "."},
					[]string{".", "9", "8", ".", ".", ".", ".", "6", "."},
					[]string{"8", ".", ".", ".", "6", ".", ".", ".", "3"},
					[]string{"4", ".", ".", "8", ".", "3", ".", ".", "1"},
					[]string{"7", ".", ".", ".", "2", ".", ".", ".", "6"},
					[]string{".", "6", ".", ".", ".", ".", "2", "8", "."},
					[]string{".", ".", ".", "4", "1", "9", ".", ".", "5"},
					[]string{".", ".", ".", ".", "8", ".", ".", "7", "9"},
				},
			},
			want: true,
		},
		{
			name: "test2",
			args: args{
				board: [][]string{
					[]string{"8", "3", ".", ".", "7", ".", ".", ".", "."},
					[]string{"6", ".", ".", "1", "9", "5", ".", ".", "."},
					[]string{".", "9", "8", ".", ".", ".", ".", "6", "."},
					[]string{"8", ".", ".", ".", "6", ".", ".", ".", "3"},
					[]string{"4", ".", ".", "8", ".", "3", ".", ".", "1"},
					[]string{"7", ".", ".", ".", "2", ".", ".", ".", "6"},
					[]string{".", "6", ".", ".", ".", ".", "2", "8", "."},
					[]string{".", ".", ".", "4", "1", "9", ".", ".", "5"},
					[]string{".", ".", ".", ".", "8", ".", ".", "7", "9"},
				},
			},
			want: false,
		},
		{
			name: "test3",
			args: args{
				board: [][]string{
					[]string{"5", "3", ".", ".", "7", ".", ".", ".", "5"},
					[]string{"6", ".", ".", "1", "9", "5", ".", ".", "."},
					[]string{".", "9", "8", ".", ".", ".", ".", "6", "."},
					[]string{"8", ".", ".", ".", "6", ".", ".", ".", "3"},
					[]string{"4", ".", ".", "8", ".", "3", ".", ".", "1"},
					[]string{"7", ".", ".", ".", "2", ".", ".", ".", "6"},
					[]string{".", "6", ".", ".", ".", ".", "2", "8", "."},
					[]string{".", ".", ".", "4", "1", "9", ".", ".", "5"},
					[]string{".", ".", ".", ".", "8", ".", ".", "7", "9"},
				},
			},
			want: false,
		},
		{
			name: "test4",
			args: args{
				board: [][]string{
					[]string{"5", "3", ".", ".", "7", ".", ".", ".", "."},
					[]string{"6", ".", ".", "1", "9", "5", ".", ".", "."},
					[]string{".", "9", "5", ".", ".", ".", ".", "6", "."},
					[]string{"8", ".", ".", ".", "6", ".", ".", ".", "3"},
					[]string{"4", ".", ".", "8", ".", "3", ".", ".", "1"},
					[]string{"7", ".", ".", ".", "2", ".", ".", ".", "6"},
					[]string{".", "6", ".", ".", ".", ".", "2", "8", "."},
					[]string{".", ".", ".", "4", "1", "9", ".", ".", "5"},
					[]string{".", ".", ".", ".", "8", ".", ".", "7", "9"},
				},
			},
			want: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := isValidSudoku(tt.args.board); got != tt.want {
				t.Errorf("isValidSudoku() = %v, want %v", got, tt.want)
			}
		})
	}
}
